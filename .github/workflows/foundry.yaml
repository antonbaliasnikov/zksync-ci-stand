name: Foundry

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:
    inputs:
      # Dependency versions
      zksync-era-version:
        type: string
        description: 'Zksync era version'
        required: false
      era-test-node-version:
        type: string
        description: 'Era test node version'
        required: false
      # Solidity compiler parameters
      zksolc-version:
        type: string
        description: 'Zksolc version'
        required: false
        default: "1.5.4"
      solidity-version:
        type: string
        description: 'Solidity version'
        required: false
        default: "0.8.27"

jobs:

  foundry:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -ex {0}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: matter-labs/foundry-zksync

      - name: Patch dependencies
        env:
          CARGO_TOML: Cargo.toml
          GH_ML_URL: https://github.com
          # `www.github.com` is a workaround for Cargo issue with `patch` section from `git` source
          # https://github.com/rust-lang/cargo/issues/5478
          GH_ML_PATCHED_URL: https://www.github.com
          DEPENDENCIES_LIST: "zksync_dal zksync_basic_types zksync_types zksync_state zksync_multivm zksync_web3_decl zksync_utils zksync_contracts"
        run: |
          if [ ! -z ${{ inputs.zksync-era-version }} ]; then
            echo "[patch.\"${GH_ML_URL}/matter-labs/zksync-era.git\"]" >> "${CARGO_TOML}"
            for DEP in ${{ env.DEPENDENCIES_LIST }}; do
              echo "${DEP} = { git = '${GH_ML_PATCHED_URL}/matter-labs/zksync-era', rev = '${{ inputs.zksync-era-version }}' }" >> "${CARGO_TOML}"
            done
          fi
          if [ ! -z ${{ inputs.era-test-node-version }} ]; then
            echo "[patch.\"${GH_ML_URL}/matter-labs/era-test-node.git\"]" >> "${CARGO_TOML}"
            echo "era_test_node = { git = '${GH_ML_PATCHED_URL}/matter-labs/era-test-node', rev = '${{ inputs.era-test-node-version }}' }" >> "${CARGO_TOML}"
          fi
          cat "${CARGO_TOML}"

      - name: Build foundry
        run: |
          cargo build --release
          ${PWD}/target/release/forge --version
          echo "${PWD}/target/release" >> "${GITHUB_PATH}"

      - name: Create test foundry project
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          forge init --no-git --no-commit foundry-test-project

      - name: Patch compilers
        working-directory: foundry-test-project
        run: |
          if [ ! -z ${{ inputs.solidity-version }} ]; then
            echo "solc_version = \"${{ inputs.solidity-version }}\"" >> foundry.toml
          fi
          if [ ! -z ${{ inputs.zksolc-version }} ]; then
            echo "[profile.default.zksync]" >> foundry.toml
            echo "zksolc = \"${{ inputs.zksolc-version }}\"" >> foundry.toml
          fi
          cat foundry.toml

      - name: Run test foundry project
        working-directory: foundry-test-project
        run: forge test --zksync
